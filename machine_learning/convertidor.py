# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10I10IQZ7kwJ06WqRQK_563h8T5yDunq5
"""

import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt

celsius = np.array([-40, -10, 0, 8, 15, 22, 38, 70, 86, 96], dtype=float)
fahrenheit = np.array([-40, 14, 32, 46, 59, 72, 100, 158, 186.8, 204.8], dtype=float)

# Crear el modelo de la red neuronal
capa = tf.keras.layers.Dense(units=1, input_shape=[1])
modelo = tf.keras.Sequential([capa])

# Compilar el modelo
modelo.compile(optimizer=tf.keras.optimizers.Adam(0.01), loss='mean_squared_error')

historial = modelo.fit(celsius, fahrenheit, epochs=2000, verbose=False)

plt.xlabel("# Epoca")
plt.ylabel(" Magnitud de perdida")
plt.plot(historial.history["loss"])

resultado = modelo.predict([100])
print("el resultado es "+ str(resultado) + "fahrenheit ")